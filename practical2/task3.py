# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
# немного перемудрил по-моему(
months_list = [(1, 'январь', 'зима'), (2, 'февраль', 'зима'), (3, 'март', 'весна'), (4, 'апрель', 'весна'),
               (5, 'май', 'весна'), (6, 'июнь', 'лето'), (7, 'июль', 'лето'), (8, 'август', 'лето'),
               (9, 'сентябрь', 'осень'), (10, 'октябрь', 'осень'), (11, 'ноябрь', 'осенб'), (12, 'декабрь', 'зима')]
months_dict = {
        'январь': 'зима',
        'февраль': 'зима',
        'март': 'весна',
        'апрель': 'весна',
        'май': 'весна',
        'июнь': 'лето',
        'июль': 'лето',
        'август': 'лето',
        'сентябрь': 'осень',
        'октябрь': 'осень',
        'ноябрь': 'осень',
        'декбарь': 'зима'
}
month = ''
season = ''


def check_months(month_number, variants):
    global month
    global season
    if 0 < month_number < 13:
        if variants == 1:
            data = months_list[month_number - 1]
            month = data[1]
            season = data[2]
            print_answer(month, season)
        else:
            i = 1
            for month, season in months_dict.items():
                if i == month_number:
                    print_answer(month, season)
                    break
                else:
                    i += 1


def print_answer(month, season):
    print(f'1: Список. Введенный месяц: {month}, время года: {season}')


months = int(input('Введите номер интересующего Вас месяца: '))
while not 0 < months < 13:
    print('Введен неправильный номер месяца\nВведите целое число от 1 до 12 включительно')
    months = int(input('Введите номер интересующего Вас месяца: '))
variant = int(input('Введите:\n1 для выбора метода "Список";\n2 для выбора метода "Словарь":\n'))
while not 0 < variant < 3:
    print('Выбран неправильный вариант')
    variant = int(input('Введите:\n1 для выбора метода "Список";\n2 для выбора метода "Словарь":\n'))
check_months(months, variant)
